# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Sysdig - Build, scan, push and upload SARIF report

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '29 6 * * 5'

permissions:
  contents: read

jobs:

  build_vote:
    permissions:
      checks: write # for sysdiglabs/scan-action to publish the checks
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build the Vote Docker image
      run: pwd; docker build --file ./vote/Dockerfile --tag ${{ github.repository }}:latest ./vote

    - name: Sysdig Secure Inline Scan
      id: scan
      uses: sysdiglabs/scan-action@768d7626a14897e0948ea89c8437dd46a814b163
      with:
        image-tag: ${{ github.repository }}:latest
        sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_TOKEN }}
        sysdig-secure-url: https://app.au1.sysdig.com
        dockerfile-path: ./vote/Dockerfile
        input-type: docker-daemon
        ignore-failed-scan: true
        run-as-user: root

    # Upload SARIF for the "vote" build
    - name: Upload SARIF for Vote
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: ${{ steps.scan.outputs.sarifReport }}  # Adjust the step name and SARIF file for the "vote" build

    # Step to upload the SARIF file to JFrog
    - name: Upload SARIF file to JFrog
      run: |
        sarif_file="${{ steps.scan.outputs.sarifReport }}"
        if [ -z "${{ env.found_file }}" ]; then
          sarif_file="${{ env.found_file }}"
        fi
        curl -u "${{ secrets.JFROG_EMAIL }}:${{ secrets.JFROG_TOKEN }}" -T "sarif.json" "https://trialcifuu3.jfrog.io/artifactory/sysdig/vote/sarif.json"


  build_worker:
    permissions:
      checks: write # for sysdiglabs/scan-action to publish the checks
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build the Vote Docker image
      run: pwd; docker build --file ./worker/Dockerfile --tag ${{ github.repository }}:latest ./worker

    - name: Sysdig Secure Inline Scan
      id: scan
      uses: sysdiglabs/scan-action@768d7626a14897e0948ea89c8437dd46a814b163
      with:
        image-tag: ${{ github.repository }}:latest
        sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_TOKEN }}
        sysdig-secure-url: https://app.au1.sysdig.com
        dockerfile-path: ./worker/Dockerfile
        input-type: docker-daemon
        ignore-failed-scan: true
        run-as-user: root

    # Upload SARIF for the "worker" build
    - name: Upload SARIF for Worker
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: ${{ steps.scan.outputs.sarifReport }}  # Adjust the step name and SARIF file for the "worker" build

    # Step to upload the SARIF file to JFrog
    - name: Upload SARIF file to JFrog
      run: |
        sarif_file="${{ steps.scan.outputs.sarifReport }}"
        if [ -z "${{ env.found_file }}" ]; then
          sarif_file="${{ env.found_file }}"
        fi
        curl -u "${{ secrets.JFROG_EMAIL }}:${{ secrets.JFROG_TOKEN }}" -T "sarif.json" "https://trialcifuu3.jfrog.io/artifactory/sysdig/worker/sarif.json"


  build_result:
    permissions:
      checks: write # for sysdiglabs/scan-action to publish the checks
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build the Vote Docker image
      run: pwd; docker build --file ./result/Dockerfile --tag ${{ github.repository }}:latest ./result

    - name: Sysdig Secure Inline Scan
      id: scan
      uses: sysdiglabs/scan-action@768d7626a14897e0948ea89c8437dd46a814b163
      with:
        image-tag: ${{ github.repository }}:latest
        sysdig-secure-token: ${{ secrets.SYSDIG_SECURE_TOKEN }}
        sysdig-secure-url: https://app.au1.sysdig.com
        dockerfile-path: ./result/Dockerfile
        input-type: docker-daemon
        ignore-failed-scan: true
        run-as-user: root

    # Upload SARIF for the "result" build
    - name: Upload SARIF for Result
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: ${{ steps.scan.outputs.sarifReport }}  # Adjust the step name and SARIF file for the "result" build

    # Step to upload the SARIF file to JFrog
    - name: Upload SARIF file to JFrog
      run: |
        sarif_file="${{ steps.scan.outputs.sarifReport }}"
        if [ -z "${{ env.found_file }}" ]; then
          sarif_file="${{ env.found_file }}"
        fi
        curl -u "${{ secrets.JFROG_EMAIL }}:${{ secrets.JFROG_TOKEN }}" -T "sarif.json" "https://trialcifuu3.jfrog.io/artifactory/sysdig/result/sarif.json"
